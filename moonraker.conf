[server]
host: 0.0.0.0
port: 7125
# The maximum size allowed for a file upload (in MiB).  Default 1024 MiB
max_upload_size: 1024
# Path to klippy Unix Domain Socket
klippy_uds_address: ~/printer_data/comms/klippy.sock

[secrets]

[file_manager]
# post processing for object cancel. Not recommended for low resource SBCs such as a Pi Zero. Default False
enable_object_processing: True
queue_gcode_uploads: True

[job_queue]
load_on_startup: True

[authorization]
cors_domains:
    https://my.mainsail.xyz
    http://my.mainsail.xyz
    http://*.local
    http://*.lan
trusted_clients:
    10.0.0.0/8
    127.0.0.0/8
    169.254.0.0/16
    172.16.0.0/12
    192.168.0.0/16
    100.0.0.0/8
    FE80::/10
    ::1/128

# enables partial support of Octoprint API
[octoprint_compat]

# enables moonraker to track and store print history.
[history]

# this enables moonraker announcements for mainsail
[announcements]
subscriptions:
    mainsail

[mqtt]
address: 192.168.1.51
port: 1883
client_id: moonraker
#enable_tls: False
username: {secrets.mqtt.username}
password: {secrets.mqtt.password}
#mqtt_protocol: v3.1.1
enable_moonraker_api: True
instance_name: ender3s1
status_objects:
  webhooks
  toolhead=position,print_time,homed_axes
  extruder=temperature
status_interval: 5
publish_split_status: False
#default_qos: 0
#api_qos: 0

# this enables moonraker's update manager
[update_manager]
refresh_interval: 168
enable_auto_refresh: True

[update_manager mainsail]
type: web
channel: stable
repo: mainsail-crew/mainsail
path: ~/mainsail

[update_manager mainsail-config]
type: git_repo
primary_branch: master
path: ~/mainsail-config
origin: https://github.com/mainsail-crew/mainsail-config.git
managed_services: klipper

# moonraker-timelapse
# Don't forget to include timelapse.cfg to your printer.cfg
# Uncomment to enable moonraker-timelapse


[update_manager timelapse]
type: git_repo
primary_branch: main
path: ~/moonraker-timelapse
origin: https://github.com/mainsail-crew/moonraker-timelapse.git
managed_services: klipper moonraker

[timelapse]
output_path: ~/printer_data/timelapse/
ffmpeg_binary_path: /usr/bin/ffmpeg

# Crowsnest update_manager entry
#[update_manager crowsnest]
#type: git_repo
#path: ~/crowsnest
#origin: https://github.com/mainsail-crew/crowsnest.git
#managed_services: crowsnest
#install_script: tools/pkglist.sh

# Sonar update_manager entry
#[update_manager sonar]
#type: git_repo
#path: ~/sonar
#origin: https://github.com/mainsail-crew/sonar.git
#primary_branch: main
#managed_services: sonar
#install_script: tools/install.sh

# Power Control

[power printer]
type: mqtt
command_topic: zigbee2mqtt/Impressora 3D/set/state
command_payload: {command}
state_topic: zigbee2mqtt/Impressora 3D
state_response_template:
    {% set resp = payload|fromjson %}
    { resp["state"] }
query_topic: zigbee2mqtt/Impressora 3D/get/state
bound_services:
    klipper
restart_klipper_when_powered: True
off_when_shutdown: True
on_when_job_queued: True
locked_while_printing: True

[power klipperscreen]
type: klipper_device
object_name: gcode_macro KLIPPERSCREEN
# The option below locks out requests to toggle the flare
# when Klipper is printing, however it cannot prevent a
# direct call to the SET_FLARE gcode macro.

[power cam_light]
type: http
on_url: http://192.168.1.64/light/klipper_cam_light/turn_on
off_url: http://192.168.1.64/light/klipper_cam_light/turn_off
status_url: http://192.168.1.64/light/klipper_cam_light
request_template:
  {% if command in ["on", "off"] %}
    {% do http_request.set_method("POST") %}
    {% do http_request.set_body({}) %}
  {% endif %}
  {% do http_request.send() %}
response_template:
  {% if command in ["on", "off"] %}
    {% do async_sleep(1.0) %}
    {% do http_request.set_method("GET") %}
    {% do http_request.set_body(None) %}
    {% do http_request.set_url(urls.status) %}
    {% set response = http_request.send() %}
    {% do response.raise_for_status() %}
  {% endif %}
  {% set resp = http_request.last_response().json() %}
  {resp["state"]}

# [sensor printer]
# type: mqtt
# state_topic: zigbee2mqtt/Impressora 3D
# state_response_template:
#   {% set resp = payload|fromjson %}
#   {set_result("energy", resp["energy"])}
#   {set_result("voltage", resp["voltage"])}
#   {set_result("power", resp["power"])}
#   {set_result("current", resp["current"])}
# parameter_power:
#   units: W
# parameter_voltage:
#   units: V
# parameter_current:
#   units: A
# parameter_energy:
#   units: kWh
# history_field_energy_consumption:
#   parameter: energy
#   desc: Printer energy consumption
#   strategy: delta
#   units: kWh
#   init_tracker: true
#   precision: 6
#   exclude_paused: false
#   report_total: true
#   report_maximum: true
# history_field_average_current:
#   parameter: current
#   desc: Average current draw
#   strategy: average
#   units: A
#   report_total: false
#   report_maximum: true
# history_field_max_current:
#   parameter: current
#   desc: Maximum current draw
#   strategy: maximum
#   units: A
#   init_tracker: true
#   report_total: false
#   report_maximum: false

#[update_manager mobileraker]
#type: git_repo
#path: /home/pi/mobileraker_companion
#origin: https://github.com/Clon1998/mobileraker_companion.git
#primary_branch:main
#managed_services: mobileraker
#env: /home/pi/mobileraker-env/bin/python
#requirements: scripts/mobileraker-requirements.txt
#install_script: scripts/install.sh

#[include octoapp-system.cfg]

[include moonraker-obico-update.cfg]

[spoolman]
server: http://192.168.1.52:7912

[update_manager Spoolman]
type: zip
channel: stable
repo: Donkie/Spoolman
path: /home/orangepi/Spoolman
virtualenv: .venv
requirements: requirements.txt
persistent_files:
  .venv
  .env
managed_services: Spoolman



## Klippain Shake&Tune automatic update management
[update_manager Klippain-ShakeTune]
type: git_repo
origin: https://github.com/Frix-x/klippain-shaketune.git
path: ~/klippain_shaketune
virtualenv: /home/orangepi/klippy-env
requirements: requirements.txt
system_dependencies: system-dependencies.json
primary_branch: main
managed_services: klipper

[update_manager mobileraker]
type: git_repo
path: /home/orangepi/mobileraker_companion
origin: https://github.com/Clon1998/mobileraker_companion.git
primary_branch:main
managed_services: mobileraker
env: /home/orangepi/mobileraker-env/bin/python
requirements: scripts/mobileraker-requirements.txt
install_script: scripts/install.sh
